# Generated by Django 2.1.7 on 2019-05-24 11:17

import apps.core.models.element_parameter
from django.conf import settings
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
import django.contrib.postgres.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import lib.models.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Element',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('element_type', models.CharField(choices=[('SOURCE', 'Источник'), ('GROUND', 'Земля'), ('GENERATOR', 'Генератор'), ('ANALYZER', 'Анализатор'), ('AND', 'И'), ('OR', 'ИЛИ'), ('NOT', 'НЕ'), ('XOR', 'Исключающее ИЛИ'), ('NOR', 'ИЛИ-НЕ'), ('NAND', 'И-НЕ'), ('USER', 'Пользовательский')], max_length=30, verbose_name='Тип')),
                ('array_of_inputs', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), size=None, verbose_name='Массив имён входов')),
                ('array_of_outputs', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), size=None, verbose_name='Массив имён выходов')),
                ('time', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Время работы')),
                ('delay', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Время задержки')),
                ('image', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Изображение')),
                ('truth_table', django.contrib.postgres.fields.jsonb.JSONField(validators=[lib.models.validators.JSONArrayFieldValidator(dimension=3, field_validator=lib.models.validators.bin_validator)], verbose_name='Временная дискретизация таблицы истинности')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Создатель')),
            ],
            options={
                'verbose_name': 'Элемент',
                'verbose_name_plural': 'Элементы',
            },
        ),
        migrations.CreateModel(
            name='ElementParameter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('dimension', models.CharField(choices=[(apps.core.models.element_parameter.DimensionChoice('м'), 'м'), (apps.core.models.element_parameter.DimensionChoice('мк'), 'мк'), (apps.core.models.element_parameter.DimensionChoice('н'), 'н'), (apps.core.models.element_parameter.DimensionChoice('п'), 'п'), (apps.core.models.element_parameter.DimensionChoice('К'), 'К'), (apps.core.models.element_parameter.DimensionChoice('М'), 'М'), (apps.core.models.element_parameter.DimensionChoice('Г'), 'Г'), (apps.core.models.element_parameter.DimensionChoice('Т'), 'Т')], max_length=30, verbose_name='Размерность')),
                ('value', models.FloatField(verbose_name='Значение')),
                ('element', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Element', verbose_name='Элемент')),
            ],
            options={
                'verbose_name': 'Параметр Элемента',
                'verbose_name_plural': 'Параметры Элемента',
            },
        ),
        migrations.CreateModel(
            name='Scheme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('formula', models.CharField(blank=True, max_length=255, null=True, verbose_name='Формула')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Создатель')),
            ],
            options={
                'verbose_name': 'Схема',
                'verbose_name_plural': 'Схемы',
            },
        ),
        migrations.CreateModel(
            name='SchemeElement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coordinates', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(validators=[django.core.validators.MinValueValidator(0)]), size=None, validators=[django.contrib.postgres.validators.ArrayMaxLengthValidator(2), django.contrib.postgres.validators.ArrayMinLengthValidator(2)], verbose_name='Координаты')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название')),
                ('element', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Element', verbose_name='Элемент')),
                ('scheme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Scheme', verbose_name='Схема')),
            ],
            options={
                'verbose_name': 'Элементы Схемы',
                'verbose_name_plural': 'Элементы Схемы',
            },
        ),
        migrations.CreateModel(
            name='SchemeLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('input_pin', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Индекс входа на элементе')),
                ('output_pin', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Индекс выхода на элементе')),
                ('coordinate_array', django.contrib.postgres.fields.ArrayField(base_field=django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(validators=[django.core.validators.MinValueValidator(0)]), size=None, validators=[django.contrib.postgres.validators.ArrayMaxLengthValidator(2), django.contrib.postgres.validators.ArrayMinLengthValidator(2)]), size=None, verbose_name='Координаты')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название')),
                ('input_scheme_element', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='in_link', to='core.SchemeElement', verbose_name='Входной элемент схемы')),
                ('output_scheme_element', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='out_link', to='core.SchemeElement', verbose_name='Выходной элемент схемы')),
            ],
            options={
                'verbose_name': 'Связи схемы',
                'verbose_name_plural': 'Связи схемы',
            },
        ),
        migrations.CreateModel(
            name='SchemeTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scheme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Scheme', verbose_name='Схема')),
            ],
            options={
                'verbose_name': 'Тег схемы',
                'verbose_name_plural': 'Теги схемы',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Тег',
                'verbose_name_plural': 'Теги',
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Единица измерения',
                'verbose_name_plural': 'Единицы измерения',
            },
        ),
        migrations.AddField(
            model_name='schemetag',
            name='tag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Tag', verbose_name='Тег'),
        ),
        migrations.AddField(
            model_name='scheme',
            name='elements',
            field=models.ManyToManyField(related_name='schemes', through='core.SchemeElement', to='core.Element'),
        ),
        migrations.AddField(
            model_name='elementparameter',
            name='unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Unit', verbose_name='Единица измерения'),
        ),
    ]
