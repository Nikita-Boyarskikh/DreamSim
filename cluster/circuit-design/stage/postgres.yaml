---
apiVersion: v1
kind: Service
metadata:
  namespace: circuit-design-stage
  name: postgres
  labels:
    app: postgres
    stage: stage
    service: circuit-design
spec:
  selector:
    app: postgres
    stage: stage
    service: circuit-design
  ports:
    - port: 5432
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: circuit-design-stage
  labels:
    app: postgres
    stage: stage
    service: circuit-design
spec:
  selector:
    matchLabels:
      app: postgres
      stage: stage
      service: circuit-design
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: postgres
        stage: stage
        service: circuit-design
    spec:
      containers:
        - name: postgres
          image: eu.gcr.io/circuit-design-ru/circuit-design-postgres
          imagePullPolicy: Always
          envFrom:
          - configMapRef:
              name: postgres-env
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - "PGPASSWORD=$POSTGRES_PASSWORD psql -U $POSTGRES_USER -h postgres -d $POSTGRES_DB -c 'SELECT 1'"
            initialDelaySeconds: 15
            timeoutSeconds: 2
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - "PGPASSWORD=$POSTGRES_PASSWORD psql -U $POSTGRES_USER -h postgres -d $POSTGRES_DB -c 'SELECT 1'"
            initialDelaySeconds: 45
            timeoutSeconds: 2
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-data
          hostPath:
            path: /var/lib/postgresql/data
